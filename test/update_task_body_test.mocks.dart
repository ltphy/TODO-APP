// Mocks generated by Mockito 5.0.15 from annotations
// in todo/test/update_task_body_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;
import 'dart:ui' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:todo/model/task/task.dart' as _i4;
import 'package:todo/provider/selected_task_provider.dart' as _i3;
import 'package:todo/provider/task_list_provider.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeTaskListProvider_0 extends _i1.Fake implements _i2.TaskListProvider {
}

/// A class which mocks [SelectedTaskProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockSelectedTaskProvider extends _i1.Mock
    implements _i3.SelectedTaskProvider {
  MockSelectedTaskProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set task(_i4.Task? _task) =>
      super.noSuchMethod(Invocation.setter(#task, _task),
          returnValueForMissingStub: null);
  @override
  bool get loading =>
      (super.noSuchMethod(Invocation.getter(#loading), returnValue: false)
          as bool);
  @override
  set loading(bool? _loading) =>
      super.noSuchMethod(Invocation.setter(#loading, _loading),
          returnValueForMissingStub: null);
  @override
  String get description =>
      (super.noSuchMethod(Invocation.getter(#description), returnValue: '')
          as String);
  @override
  set description(String? _description) =>
      super.noSuchMethod(Invocation.setter(#description, _description),
          returnValueForMissingStub: null);
  @override
  String get name =>
      (super.noSuchMethod(Invocation.getter(#name), returnValue: '') as String);
  @override
  set name(String? _name) => super.noSuchMethod(Invocation.setter(#name, _name),
      returnValueForMissingStub: null);
  @override
  _i2.TaskListProvider get taskListProvider =>
      (super.noSuchMethod(Invocation.getter(#taskListProvider),
          returnValue: _FakeTaskListProvider_0()) as _i2.TaskListProvider);
  @override
  String get successMessage =>
      (super.noSuchMethod(Invocation.getter(#successMessage), returnValue: '')
          as String);
  @override
  String get failMessage =>
      (super.noSuchMethod(Invocation.getter(#failMessage), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i5.Future<void> updateSelectedTask() =>
      (super.noSuchMethod(Invocation.method(#updateSelectedTask, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  void updateLoading() =>
      super.noSuchMethod(Invocation.method(#updateLoading, []),
          returnValueForMissingStub: null);
  @override
  void updateTask({String? description, String? name}) => super.noSuchMethod(
      Invocation.method(
          #updateTask, [], {#description: description, #name: name}),
      returnValueForMissingStub: null);
  @override
  void addListener(_i6.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i6.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}
