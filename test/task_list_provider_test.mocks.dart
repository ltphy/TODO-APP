// Mocks generated by Mockito 5.0.15 from annotations
// in todo/test/task_list_provider_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:localstorage/localstorage.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:todo/model/task/task.dart' as _i4;
import 'package:todo/service/storage_database.dart' as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeLocalStorage_0 extends _i1.Fake implements _i2.LocalStorage {}

/// A class which mocks [StorageDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageDatabase extends _i1.Mock implements _i3.StorageDatabase {
  MockStorageDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.LocalStorage get localStorage =>
      (super.noSuchMethod(Invocation.getter(#localStorage),
          returnValue: _FakeLocalStorage_0()) as _i2.LocalStorage);
  @override
  List<_i4.Task> getTaskListFromStorage() =>
      (super.noSuchMethod(Invocation.method(#getTaskListFromStorage, []),
          returnValue: <_i4.Task>[]) as List<_i4.Task>);
  @override
  _i5.Future<void> saveTaskListToStorage(List<_i4.Task>? taskList) =>
      (super.noSuchMethod(Invocation.method(#saveTaskListToStorage, [taskList]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  String toString() => super.toString();
  @override
  List<T> convertFromJsonListToObjectList<T>(
          {List<dynamic>? storageItems,
          T Function(Map<String, dynamic>)? builder}) =>
      (super.noSuchMethod(
          Invocation.method(#convertFromJsonListToObjectList, [],
              {#storageItems: storageItems, #builder: builder}),
          returnValue: <T>[]) as List<T>);
  @override
  List<dynamic> convertFromObjectListToJsonList<T>(
          {List<T>? items, Map<String, dynamic> Function(T)? builder}) =>
      (super.noSuchMethod(
          Invocation.method(#convertFromObjectListToJsonList, [],
              {#items: items, #builder: builder}),
          returnValue: <dynamic>[]) as List<dynamic>);
}
